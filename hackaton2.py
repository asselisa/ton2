###########################################################

# Задача 1
# Есть список:
#a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# Выведите все элементы, которые больше 5.

'''
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
print(a[5:])
'''



'''
if a>5:
	print(a)
else:
	print("menshe 5")
'''





##########################################################

#Задача 2
# Есть набор чисел 
#digits = (113,118,-5,1,135,137,0,142,144,17,154,0,155,2,159,172)
# Поделить каждое число из digits на 9 и вывести на экран.

'''
digits = (113,118,-5,1,135,137,0,142,144,17,154,0,155,2,159,172)

for i in digits:
	print(i/9)
'''

#print(digits[0:len(digits)])

#(a[:len(a)//2]) 






#########################################################

#Задача 3
# fruits = ('banana','stawberry','apple','orange','limon','ananas')
# Выведите первый и последний элемент списка.

'''
fruits = ('banana','stawberry','apple','orange','limon','ananas')

print(fruits[0::5]) #
'''

#########################################################

# Задача 4 
# Напишите программу, которая берёт массив данных spisok2 и выводит только те элементы из spisok_2, которых нет в spisok_1.


#spisok_1 = ('Lamborgini', 17, '4456', 2020, 'Paris', 'USA', 11, 23)
#spisok_2 = ('Ferrari', 17, 4456, 2021, 'Paris', 'UK', 777, 23)



#a='100'
#c = int(a+150)


spisok_1 = ('Lamborgini', 17, '4456', 2020, 'Paris', 'USA', 11, 23)
68 spisok_2 = ('Ferrari', 17, 4456, 2021, 'Paris', 'UK', 777, 23)

w=set(spisok_1)
e=set(spisok_2)
a = e.difference(w)
print(a)

#{2021, 'UK', 'Ferrari', 4456, 777, 17, 'Paris', 23}
#{17, 'Paris', 23}
#{2021, 4456, 777, 'Ferrari', 'UK'}
#{2021, 4456, 777, 'Ferrari', 'UK'}
#{'UK', 2021, 4456, 777, 'Ferrari'}


#########################################################

# Задача 5
# Напишите программу, которая выводит чётные числа из списка длиною 300 объектов
#    и останавливается, если встречает число 237.

########################################################

# Задание 6:
# У вас есть идея создать Back-end для игры: "Угадай число."
 
###################
# Данный код генерирует рандомное число.  Скопируйте всё что между решёток к себе в код.
###################
# import random as rd
# random_number = rd.randint(0,10)
# print(random_number)
###################
 
# С помощью функции input() спрашивайте число от пользователя.
 
# Запустите бесконечный цикл!
# И пытайтесь спрашивать у пользователя какое-то число каждый раз.
# Если пользователь угадал число которое сгенерировал компьютер остановите цикл и скажите пользователю - "Вы угадали!"
# Если пользователь не угадал вы снова спросите у него число.
# Если пользователь 3 раза подряд не угадал число, вы останавливаете цикл и говорите: "Вы проиграли..."

#####################################################################

# Задание 7:
# 1. Спросите у пользователя предложение и поделите его по пробелам.
    # Если пользователь ввёл меньше шести слов спросите снова, Не принимайте предложения если оно короче 6 символов, спрашивайте снова и снова.
# 2. Поделите полученный лист на 2 равные части (Если число элементов листа нечетное, то длина первой части должна быть на один жлемент больше)
# 3. Переставьте эти две части местами и запишите в лист. 

######################################################################

# Задание 8:
# Вам дан список:
# numbers = [2,4,7,1,8.4,-3.3,7.1,-2,4,-1,7,-43,8,-3,6,9]
# Определите количество четных и не четных.

##################################################################

# Задание 9:
# Дан список  целых чисел:
# numbers = [0,2,4,7,1,8,0,-3,7,0,-2,4,0,0,-1,7,-43,0,8,-3,6,9]
# Создайте новый лист и замените отрицательные числа на -1, положительные на число 1, ноль оставить без изменения.

#################################################################

# Задание 10:
# my_list = [2,4,6,8,10,1,3,5,7,9,11,13,17]
# Выведите все элементы списка с четными ИНДЕКСАМИ (то есть A[0], A[2], A[4], ... ])

#################################################################

# Задание 11:
# Дан список чисел:
# numbers = [1,0,-2,4,3,6,6,3,5,8,4,2] 
# Выведите все элементы списка, которые больше предущего элемента
# Пример: (numbers: 1,5,2,4,3 Результат: 5,4)
